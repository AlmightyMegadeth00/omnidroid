                              OmniDroid - TODO

ENGINE:
  Off-By-One Data Error Solution:
    1) Have a separate "SMS plug in" which understands our framework.
    2) This plug in will generate EVENTS as required to interact with
       OmniDroid.(ie Event containing the URI pointing to the exact record). At
       the moment we do not get the exact URI from the SMS application; so we
       query the last record in the CP. This causes the "off by one" bug.
       Our suggested SMS plugin will have a "CONTENT PROVIDER OBSERVER" with
       generates OmniDroid events only when the SMS CP is updated with the
       required record.
    3) These plug ins could be provided for all important applications; till
       they interact in the way we would like them to. ie. Once applications
       adapt to our framework we can get rid of the plugins.
    4) These plug ins could have their own CP if there is no CP for the
       original application.
       
  Automatic Application Registration:
    When OmniDroid is first installed/updated, it should register all supported
    applications with itself.  This means, it should register any built-in
    supported applications, as well as query all the installed applications
    to see if any of them are omni-aware and load the application config for
    those apps.  Also, when other applications are installed/updated, it should
    be queried to see if it is Omni-Aware and load the config for it as well.
  
UI:
  Feature request: Edit OmniHandler
  Feature request: Edit Filter
  Feature request: Edit Action
  Feature request: Allow multiple filters
  Feature request: Allow multiple actions
  
Third Party Applications:
    To join the OmniDroid pool of applications, third party applications need
    to provide their application configuration file in their APP_COFIG_SPACE.
    OmniDroid functionality: Need to provide functionality in OmniDroid to parse
    the APP_CONFIG_SPACE of all applications on the phone and add their configuration
    to the OMNIDORID application configuration file; to enable OmniDroid to understand 
    their behavior.
    

Use Cases:
  Setup more use case examples.  Specifically system and preloaded app use cases.  For example:
      *  Active Development:
          o If you are pissed off with ur bf/gf or some advertising company, and just want to delete their sms's without reading them, then OmniDroid will delete them from inbox.
          o If I receiving and incoming calls and our phone is in "silent" mode, then automatically reply with an SMS message.
          o If a calendar event notification has occorred, send an automatic email or SMS to a recipient or list of recipients.
          o If the power level is low, and we receive and incoming call, automatically ignore the call 
    * Wishlist:
          o 1st event of the day -> Alarm Wake up
          o Birthday -> Toast Action
          o Cold/Rainy Weather -> Toast Msg/Suggest Clothing
          o Toast Action -> Email/SMS/Call
          o Date/Time -> Suggest Meals
          o Email Recd -> Organize/respond based on status
          o Location -> Set phone profile
          o Silent mode/call -> Send SMS
          o Set Mood -> Choose Music Playlist
          o Update profile on one app -> Update profile on others
          o New song playing -> update away msg
          o Specific song plays -> Picture Display
          o Get email from a contact -> Queue song associated with them
          o Locale coordinate changes -> BooRah (Restaurant listings and reviews)
          o Alert on Stock Ticker -> Send email to Broker
          o Update "Not Well" Status -> Send notification to Bosses/Friends
          o WiFi network -> Automatically connect
          o If location is changing rapidly -> Activate GPS logging to keep track of speed/path/etc, send email or publish somewhere. 


== Feature/Wish List ==
Feature list:
1) Support Omni-Aware applications
2) Primary focus on supporting built-in applications

Wishlist:
1) Omni un-aware application User assisted mapping
2) Omni un-aware application Automated mapping
3) Omni aware SOAP application


== Things we need to build out more ==
1) Architecture
2) Use Cases
3) Components/Snippets
4) UI prototypes

